managed; //implementation in class zbp_ke_m_travel unique;
//strict ( 1 );
with draft;

define behavior for ZKE_M_TRAVEL alias Travel
implementation in class zbp_ke_m_travel unique
persistent table /dmo/travel
draft table zke_draft_travel
lock master
//authorization master ( instance )
total etag Lastchangedat
etag master Lastchangedat
early numbering
{

 field (readonly) Createdat, Createdby, Lastchangedat, Lastchangedby;
  field (features : instance) TravelId;
  create;
  update;
  delete;

  draft determine action Prepare{
   validation validateCustomer;
   validation validateDates;
   validation validateStatus;
  }

  validation validateCustomer on save { field CustomerId; create; }
  validation validateDates on save { field BeginDate, EndDate; create; }
  validation validateStatus on save { field status; }

  association Booking { create; with draft; }
  action createTravelByTemplate result [1] $self;
  action (features : instance) acceptTravel result [1] $self;
  action (features : instance) rejectTravel result [1] $self;
  mapping for /dmo/travel{
        TravelId = travel_id;
        AgencyId = agency_id;
        CustomerId = customer_id;
        BeginDate = begin_date;
        EndDate = end_date;
        BookingFee = booking_fee;
        TotalPrice = total_price;
        CurrencyCode = currency_code;
        Description = description;
        Status = status;
        Createdat = createdat;
        Createdby = createdby;
        Lastchangedat = lastchangedat;
        Lastchangedby = lastchangedby;
        }
}

define behavior for ZKE_M_BOOKING alias Booking
implementation in class zbp_ke_m_booking unique
persistent table /dmo/booking
draft table zke_draft_book
lock dependent by Travel
//authorization dependent by Travel
etag master lastChangeAT
early numbering
{
   update;
  delete;
  field ( readonly ) TravelId;
  field ( mandatory ) ConnectionId, CarrierId, FlightDate, FlightPrice;
  field (features: instance) bookingid, BookingDate, CustomerId;

  association Travel {with draft;}

  determination calculateTotalFlightPrice on modify { field FlightPrice, CurrencyCode; create; }
  mapping for /dmo/booking{
        BookingId = booking_id;
        TravelId = travel_id;
        BookingDate = booking_date;
        CustomerId = customer_id;
        ConnectionId = connection_id;
        CarrierId = carrier_id;
        FlightDate = flight_date;
        FlightPrice = flight_price;
        CurrencyCode = currency_code;
  }
}